"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[3616],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),m=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(o.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,g=u["".concat(o,".").concat(d)]||u[d]||l[d]||s;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var m=2;m<s;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4586:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return i},default:function(){return l},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var r=n(3117),a=(n(7294),n(3905));const s={id:"signed",title:"Signed",sidebar_position:27,description:"Signed"},i="Signed",p={unversionedId:"E-ComputerArchitecture/signed",id:"E-ComputerArchitecture/signed",title:"Signed",description:"Signed",source:"@site/docs/E-ComputerArchitecture/signed.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/signed",permalink:"/SPO600/E-ComputerArchitecture/signed",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/signed.md",tags:[],version:"current",sidebarPosition:27,frontMatter:{id:"signed",title:"Signed",sidebar_position:27,description:"Signed"},sidebar:"courseNotesSidebar",previous:{title:"Register",permalink:"/SPO600/E-ComputerArchitecture/register"},next:{title:"Stack",permalink:"/SPO600/E-ComputerArchitecture/stack"}},o={},m=[{value:"Two&#39;s Compliment",id:"twos-compliment",level:2},{value:"BCD",id:"bcd",level:2}],c={toc:m};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"signed"},"Signed"),(0,a.kt)("p",null,"A ",(0,a.kt)("em",{parentName:"p"},"signed")," value is a binary value with a positive/negative ",(0,a.kt)("em",{parentName:"p"},"sign"),". Alternatively, an unsigned number can represent positive (or zero) values only."),(0,a.kt)("p",null,"Some number representations allow for both positive and negative zero values."),(0,a.kt)("h2",{id:"twos-compliment"},"Two's Compliment"),(0,a.kt)("p",null,"In two's compliment integer representation, positive integer values are represented by the binary representation of the integer, and negative integer values are represented by the ",(0,a.kt)("strong",{parentName:"p"},"two's compliment")," of the absolute integer value -- effectively, (",(0,a.kt)("span",{parentName:"p",className:"math math-inline"},(0,a.kt)("span",{parentName:"span",className:"katex"},(0,a.kt)("span",{parentName:"span",className:"katex-mathml"},(0,a.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,a.kt)("semantics",{parentName:"math"},(0,a.kt)("mrow",{parentName:"semantics"},(0,a.kt)("msup",{parentName:"mrow"},(0,a.kt)("mn",{parentName:"msup"},"2"),(0,a.kt)("mrow",{parentName:"msup"},(0,a.kt)("mi",{parentName:"mrow"},"w"),(0,a.kt)("mi",{parentName:"mrow"},"i"),(0,a.kt)("mi",{parentName:"mrow"},"d"),(0,a.kt)("mi",{parentName:"mrow"},"t"),(0,a.kt)("mi",{parentName:"mrow"},"h")))),(0,a.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{2^{width}}")))),(0,a.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,a.kt)("span",{parentName:"span",className:"base"},(0,a.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8491em"}}),(0,a.kt)("span",{parentName:"span",className:"mord"},(0,a.kt)("span",{parentName:"span",className:"mord"},(0,a.kt)("span",{parentName:"span",className:"mord"},"2"),(0,a.kt)("span",{parentName:"span",className:"msupsub"},(0,a.kt)("span",{parentName:"span",className:"vlist-t"},(0,a.kt)("span",{parentName:"span",className:"vlist-r"},(0,a.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8491em"}},(0,a.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,a.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,a.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,a.kt)("span",{parentName:"span",className:"mord mtight"},(0,a.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.02691em"}},"w"),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"i"),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"d"),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"t"),(0,a.kt)("span",{parentName:"span",className:"mord mathnormal mtight"},"h")))))))))))))),"-abs(",(0,a.kt)("strong",{parentName:"p"},"n"),")), where ",(0,a.kt)("strong",{parentName:"p"},"width")," is the word size in bits, and ",(0,a.kt)("strong",{parentName:"p"},"n")," is the integer being represented."),(0,a.kt)("p",null,"Example: A single unsigned ",(0,a.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/word#byte"},"byte")," (8 bits) stores an integer value in the range of 0 to (2^8 - 1 =) 255. If the byte is treated as a signed value, then values from 0-127 (0x00-0x7F) are treated as the positive integers 0-127, and the values 128-255 (0x80-0xFF) are treated as negative integers -128 to -1."),(0,a.kt)("p",null,"Notice that in two's compliment representation, the highest-order bit is the sign bit: 0 == positive, 1 == negative."),(0,a.kt)("p",null,"Signed address offsets are often used for relative ",(0,a.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/addressing-mode"},"addressing modes"),"."),(0,a.kt)("h2",{id:"bcd"},"BCD"),(0,a.kt)("p",null,"In signed ",(0,a.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/bcd"},"BCD"),", the high-order nibble is used to represent the sign (0 == positive, non-0 == negative)."))}l.isMDXComponent=!0}}]);