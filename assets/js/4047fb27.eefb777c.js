"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[7060],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=n.createContext({}),a=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=a(e.components);return n.createElement(u.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},s=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=a(t),f=o,d=s["".concat(u,".").concat(f)]||s[f]||m[f]||i;return t?n.createElement(d,c(c({ref:r},l),{},{components:t})):n.createElement(d,c({ref:r},l))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=s;var p={};for(var u in r)hasOwnProperty.call(r,u)&&(p[u]=r[u]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var a=2;a<i;a++)c[a]=t[a];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7111:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return a}});var n=t(3117),o=(t(7294),t(3905));const i={id:"compiler",title:"Compiler",sidebar_position:10,description:"Compiler"},c="Compiler",p={unversionedId:"E-ComputerArchitecture/compiler",id:"E-ComputerArchitecture/compiler",title:"Compiler",description:"Compiler",source:"@site/docs/E-ComputerArchitecture/compiler.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/compiler",permalink:"/SPO600/E-ComputerArchitecture/compiler",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/compiler.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{id:"compiler",title:"Compiler",sidebar_position:10,description:"Compiler"},sidebar:"courseNotesSidebar",previous:{title:"Compiler Intrinsics",permalink:"/SPO600/E-ComputerArchitecture/compiler-intrinsics"},next:{title:"Debugger",permalink:"/SPO600/E-ComputerArchitecture/debugger"}},u={},a=[],l={toc:a};function m(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"compiler"},"Compiler"),(0,o.kt)("p",null,"A ",(0,o.kt)("em",{parentName:"p"},"compiler")," is a program which takes input code, typically human-readable source code, and produces output code, typically binary ",(0,o.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/machine-language"},"machine code")," but possibly an intermediate bytecode."))}m.isMDXComponent=!0}}]);