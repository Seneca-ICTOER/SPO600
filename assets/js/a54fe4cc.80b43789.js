"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[6474],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(r),m=o,d=f["".concat(p,".").concat(m)]||f[m]||s[m]||i;return r?n.createElement(d,a(a({ref:t},l),{},{components:r})):n.createElement(d,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3737:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return s},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var n=r(3117),o=(r(7294),r(3905));const i={id:"operation",title:"Operation",sidebar_position:24,description:"Operation"},a="Operation",c={unversionedId:"E-ComputerArchitecture/operation",id:"E-ComputerArchitecture/operation",title:"Operation",description:"Operation",source:"@site/docs/E-ComputerArchitecture/operation.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/operation",permalink:"/SPO600/E-ComputerArchitecture/operation",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/operation.md",tags:[],version:"current",sidebarPosition:24,frontMatter:{id:"operation",title:"Operation",sidebar_position:24,description:"Operation"},sidebar:"courseNotesSidebar",previous:{title:"OpCode",permalink:"/SPO600/E-ComputerArchitecture/opcode"},next:{title:"Portable",permalink:"/SPO600/E-ComputerArchitecture/portable"}},p={},u=[],l={toc:u};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"operation"},"Operation"),(0,o.kt)("p",null,"An ",(0,o.kt)("em",{parentName:"p"},"operation")," is a particular action to be undertaken by a CPU, such as an addition, subtraction, multiplication, ",(0,o.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/bitwise-operations"},"bitwise operation"),", branch, store, or load."))}s.isMDXComponent=!0}}]);