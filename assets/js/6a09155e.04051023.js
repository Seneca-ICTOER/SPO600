"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[4416],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,m=u(e,["components","mdxType","originalType","parentName"]),s=l(r),d=a,f=s["".concat(c,".").concat(d)]||s[d]||p[d]||i;return r?n.createElement(f,o(o({ref:t},m),{},{components:r})):n.createElement(f,o({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=s;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var l=2;l<i;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},5705:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return l}});var n=r(3117),a=(r(7294),r(3905));const i={id:"immediate-value",title:"Immediate Value",sidebar_position:17,description:"Immediate Value"},o="Immediate Value",u={unversionedId:"E-ComputerArchitecture/immediate-value",id:"E-ComputerArchitecture/immediate-value",title:"Immediate Value",description:"Immediate Value",source:"@site/docs/E-ComputerArchitecture/immediate-value.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/immediate-value",permalink:"/SPO600/E-ComputerArchitecture/immediate-value",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/immediate-value.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{id:"immediate-value",title:"Immediate Value",sidebar_position:17,description:"Immediate Value"},sidebar:"courseNotesSidebar",previous:{title:"IEEE 754",permalink:"/SPO600/E-ComputerArchitecture/ieee-754"},next:{title:"Instruction Encoding",permalink:"/SPO600/E-ComputerArchitecture/instruction-encoding"}},c={},l=[],m={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"immediate-value"},"Immediate Value"),(0,a.kt)("p",null,"An immediate value in ",(0,a.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/machine-language"},"machine code")," is a constant or literal value argument. For example, the 6502 ",(0,a.kt)("a",{parentName:"p",href:"/SPO600/F-AssemblyLanguage/assembly-language"},"assembly")," instruction:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"LDA #$80\n")),(0,a.kt)("p",null,"...will load the literal value 0x80 (128) into the accumulator (A register)."),(0,a.kt)("p",null,"Note that the value to be loaded comes from an argument within the instruction stream; this contrasts with loading a value from a memory location in a data area, or from another register."))}p.isMDXComponent=!0}}]);