"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[1705],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return g}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(r),g=a,m=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2646:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return l}});var n=r(3117),a=(r(7294),r(3905));const o={id:"debugger",title:"Debugger",sidebar_position:11,description:"Debugger"},i="Debugger",u={unversionedId:"E-ComputerArchitecture/debugger",id:"E-ComputerArchitecture/debugger",title:"Debugger",description:"Debugger",source:"@site/docs/E-ComputerArchitecture/debugger.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/debugger",permalink:"/SPO600/E-ComputerArchitecture/debugger",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/debugger.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{id:"debugger",title:"Debugger",sidebar_position:11,description:"Debugger"},sidebar:"courseNotesSidebar",previous:{title:"Compiler",permalink:"/SPO600/E-ComputerArchitecture/compiler"},next:{title:"Disassembler",permalink:"/SPO600/E-ComputerArchitecture/disassembler"}},c={},l=[{value:"Resources",id:"resources",level:2}],s={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"debugger"},"Debugger"),(0,a.kt)("p",null,"A ",(0,a.kt)("em",{parentName:"p"},"debugger")," is a tool used to analyze running code."),(0,a.kt)("p",null,"Although debugging tools are available for interpreted and bytestream languages, the term ",(0,a.kt)("em",{parentName:"p"},"debugger")," is often used to describe a tool that can analyze object code."),(0,a.kt)("p",null,"Typical features of a debugger include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the ability to ",(0,a.kt)("a",{parentName:"li",href:"/SPO600/E-ComputerArchitecture/disassembler"},"disassemble")," code"),(0,a.kt)("li",{parentName:"ul"},"the ability to cross-reference and display source code and address ",(0,a.kt)("a",{parentName:"li",href:"/SPO600/F-AssemblyLanguage/symbol"},"symbols")," (for functions and variables)"),(0,a.kt)("li",{parentName:"ul"},"the ability to execute single instructions or lines of code (single-step)"),(0,a.kt)("li",{parentName:"ul"},"the ability to stop execution at a requested location in the program (breakpoint) or when a variable changes value (watchpoint)"),(0,a.kt)("li",{parentName:"ul"},"the ability to trap and examine faults (such as a segmentation fault)"),(0,a.kt)("li",{parentName:"ul"},"the ability to examine variables and ",(0,a.kt)("a",{parentName:"li",href:"/SPO600/E-ComputerArchitecture/register"},"registers"))),(0,a.kt)("p",null,'The GNU debugger is named "gdb" and has a command-line interface. Various graphical front-ends are available.'),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.gnu.org/software/gdb/documentation/"},"GDB Documentation"))))}p.isMDXComponent=!0}}]);