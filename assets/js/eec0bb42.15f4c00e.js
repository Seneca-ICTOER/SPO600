"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[5149],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5344:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(3117),a=(n(7294),n(3905));const o={id:"remote-x",title:"Remote X",sidebar_position:13,description:"Remote X"},i="Remote X",s={unversionedId:"D-ExtraResources/remote-x",id:"D-ExtraResources/remote-x",title:"Remote X",description:"Remote X",source:"@site/docs/D-ExtraResources/remote-x.md",sourceDirName:"D-ExtraResources",slug:"/D-ExtraResources/remote-x",permalink:"/SPO600/D-ExtraResources/remote-x",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/D-ExtraResources/remote-x.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{id:"remote-x",title:"Remote X",sidebar_position:13,description:"Remote X"},sidebar:"courseNotesSidebar",previous:{title:"RPM Packaging Process",permalink:"/SPO600/D-ExtraResources/rpm-packaging-process"},next:{title:"Public Key Cryptography",permalink:"/SPO600/D-ExtraResources/public-key-cryptography"}},l={},c=[{value:"Displayspecs",id:"displayspecs",level:2},{value:"Remote Access to an X Server with SSH",id:"remote-access-to-an-x-server-with-ssh",level:2},{value:"Using VNC",id:"using-vnc",level:2},{value:"Using Xvfb",id:"using-xvfb",level:2},{value:"Resources",id:"resources",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"remote-x"},"Remote X"),(0,a.kt)("p",null,"The X Window System is a client-server graphics system:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the ",(0,a.kt)("strong",{parentName:"li"},"server")," manages the display hardware, each typically including one or more video cards and monitors, one or more keyboards, and one or more mice or other pointing devices."),(0,a.kt)("li",{parentName:"ul"},"the ",(0,a.kt)("strong",{parentName:"li"},"client")," software connects to the server through one of several network transports to draw on the display, get status information, and receive input from the keyboard and mouse.")),(0,a.kt)("p",null,"In a typical Linux system, the server and clients run on the same computer, although one or more clients may also be remotely connected."),(0,a.kt)("h2",{id:"displayspecs"},"Displayspecs"),(0,a.kt)("p",null,"X servers are identified by a display specification or ",(0,a.kt)("em",{parentName:"p"},"displayspec"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"[server]:display[.screen]")),(0,a.kt)("p",null,"Where:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"server")," is the hostname of the server: blank for local connections via the fastest avilable means; ",(0,a.kt)("inlineCode",{parentName:"li"},"localhost")," for local connections via TCP/IP; or a hostname for remote connections via TCP/IP."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"display")," is the display number. These are numbered starting at zero. The port number used for TCP/IP connections is (6000+display)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"screen")," is the screen number if the display supports multiple screens (this is mostly obsolete; most multi-screen X servers now merge them into a single display, using the Xinerama protocol extension).")),(0,a.kt)("p",null,"Therefore:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the default local display number is ",(0,a.kt)("inlineCode",{parentName:"li"},":0")),(0,a.kt)("li",{parentName:"ul"},"display 0 on the host ",(0,a.kt)("inlineCode",{parentName:"li"},"red.example.com")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"red.example.com:0"))),(0,a.kt)("p",null,"Displayspecs are communicated to client programs through the DISPLAY environment variable (or, less often, through command-line arguments)."),(0,a.kt)("h2",{id:"remote-access-to-an-x-server-with-ssh"},"Remote Access to an X Server with SSH"),(0,a.kt)("p",null,"To run a client in a remote location from the server, you can run the raw X protocol over tcp/ip or other network transports. However, this is very insecure and is not recommended. Instead, current best practice is to use an ssh session to tunnel the X traffic."),(0,a.kt)("p",null,"Most standard ssh clients can set up the tunnel, X authentication, and other details necessary by simply including the -X or -Y command line parameters."),(0,a.kt)("p",null,"In these examples:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"red")," is the local computer, running an X server"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"blue")," is the remote computer on which the client program will be run"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"user")," is the name of the user on ",(0,a.kt)("em",{parentName:"li"},"blue"))),(0,a.kt)("p",null,"To connect to ",(0,a.kt)("em",{parentName:"p"},"blue")," and start a shell, from which any program may be run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assembly"},"ssh -XC user@blue\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"-X")," argument sets up the X tunnel, while the ",(0,a.kt)("inlineCode",{parentName:"p"},"-C")," argument turns on data compression for improved performance."),(0,a.kt)("p",null,"To connect to ",(0,a.kt)("em",{parentName:"p"},"blue")," and start the program ",(0,a.kt)("em",{parentName:"p"},"gnome-calculator"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assembly"},"ssh -XC user@blue gnome-calculator\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Not for Benchmarking:")," This is not a good solution for benchmarking because the performance will vary with network conditions."),(0,a.kt)("h2",{id:"using-vnc"},"Using VNC"),(0,a.kt)("p",null,"VNC is a remote display software that originated at Olivetti Research Labs in Cambridge UK. It is cross-platform and very lightweight. The underlying protocol is called ",(0,a.kt)("em",{parentName:"p"},"rfb")," (for ",(0,a.kt)("em",{parentName:"p"},"remote frame buffer"),"). There are many different software packages that support various aspects of the vnc/rfb system."),(0,a.kt)("p",null,"When used with the X Window System, it is necessary to have a dual server that functions as both an X server and a VNC server. The easiest way to do this is to run the ",(0,a.kt)("inlineCode",{parentName:"p"},"vncserver")," script from the ",(0,a.kt)("inlineCode",{parentName:"p"},"tigervnc-server")," package, which configures and then start the ",(0,a.kt)("inlineCode",{parentName:"p"},"Xvnc")," server. To connect X client, set and export the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISPLAY")," environment variable; to connect a VNC client, use this command: ",(0,a.kt)("inlineCode",{parentName:"p"},"vncviewer -via blue localhost:display")),(0,a.kt)("h2",{id:"using-xvfb"},"Using Xvfb"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Xvfb")," is a dummy X server that does not display output on any device. This is useful where a program needs to connect to an X server, perhaps for testing purposes, but the actual image drawn does not have to be viewed anywhere. Xvnb would typically be invoked with a command such as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assembly"},"Xvfb :0 -ac\n")),(0,a.kt)("p",null,"Where ",(0,a.kt)("inlineCode",{parentName:"p"},":0")," is the display number and ",(0,a.kt)("inlineCode",{parentName:"p"},"-ac")," disables access control to allow any local client to connect. You can then connect a client by setting and exporting the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISPLAY")," variable and starting the client:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-assembly"},"export DISPLAY=:0\ngnome-calculator\n")),(0,a.kt)("h2",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"X Power Tools"),", a book by Chris Tyler published by O'Reilly Media and available through the Seneca Libraries on-line services.")))}u.isMDXComponent=!0}}]);