"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[2729],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(l,".").concat(d)]||m[d]||p[d]||i;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4520:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return c}});var a=n(3117),r=(n(7294),n(3905));const i={id:"week7-class2",title:"Week 7 - Class 2",sidebar_position:14,description:"Week 7 - Class 2"},s="Week 7 - Class II",o={unversionedId:"A-Classes/week7-class2",id:"A-Classes/week7-class2",title:"Week 7 - Class 2",description:"Week 7 - Class 2",source:"@site/docs/A-Classes/week7-class2.md",sourceDirName:"A-Classes",slug:"/A-Classes/week7-class2",permalink:"/SPO600/A-Classes/week7-class2",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/A-Classes/week7-class2.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{id:"week7-class2",title:"Week 7 - Class 2",sidebar_position:14,description:"Week 7 - Class 2"},sidebar:"courseNotesSidebar",previous:{title:"Week 7 - Class 1",permalink:"/SPO600/A-Classes/week7-class1"},next:{title:"Week 8 - Class 1",permalink:"/SPO600/A-Classes/week8-class1"}},l={},c=[{value:"SVE2",id:"sve2",level:2},{value:"Reading",id:"reading",level:2},{value:"SVE2 Demonstration",id:"sve2-demonstration",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"week-7---class-ii"},"Week 7 - Class II"),(0,r.kt)("h2",{id:"sve2"},"SVE2"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Please catch up on course material to this point. If you are fully caught up, you can start to take a look at SVE2:")),(0,r.kt)("h2",{id:"reading"},"Reading"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/SPO600/H-ARM/sve2"},"SVE2"))),(0,r.kt)("h2",{id:"sve2-demonstration"},"SVE2 Demonstration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Code available here: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ctyler/sve2-test"},"https://github.com/ctyler/sve2-test")),(0,r.kt)("li",{parentName:"ul"},"This is an implementation of a very simple program which takes an image file, adjusts the red/green/blue channels of that file, and then writes an output file. Each channel is adjusted by a factor in the range 0.0 to 2.0 (with saturation)."),(0,r.kt)("li",{parentName:"ul"},"The image adjustment is performed in the function ",(0,r.kt)("inlineCode",{parentName:"li"},"adjust_channels()")," in the file ",(0,r.kt)("inlineCode",{parentName:"li"},"adjust_channels.c"),". There are three implementations:",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"A basic (naive) implementation in C. Although this is a very basic implementation, it is potentially subject to autovectorization."),(0,r.kt)("li",{parentName:"ol"},"An implementation using inline assembler for SVE2 with strucure loads."),(0,r.kt)("li",{parentName:"ol"},"An implementation using inline assembler for SVE2 with an interleaved factor table."),(0,r.kt)("li",{parentName:"ol"},"An implementation using ACLE compile intrinsics."))),(0,r.kt)("li",{parentName:"ul"},"The implementation built is dependent on the value of the ADJUST","_","CHANNEL","_","IMPLEMENTATION macro."),(0,r.kt)("li",{parentName:"ul"},"The provided Makefile will build four versions of the binary -- one using each of the four implementations -- and it will run through 3 tests with each binary. The tests use the input image file ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/input/bree.jpg")," (a picture of a cat) and place the output in the files ",(0,r.kt)("inlineCode",{parentName:"li"},"tests/output/bree[1234][abc].jpg"),". The output files are processed with adjustment factors of 0.5/0.5/0.5, 1.0/1.0/1.0, and 2.0/2.0/2.0."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Please examine, build, and test the code, compare the implementations, and note how it works - there are extensive comments in the code, especially for implementation 2.")),(0,r.kt)("li",{parentName:"ul"},"Your observations about the code might make a good blog post!")))}p.isMDXComponent=!0}}]);