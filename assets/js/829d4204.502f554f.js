"use strict";(self.webpackChunkSPO600=self.webpackChunkSPO600||[]).push([[6423],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(r),m=i,f=d["".concat(u,".").concat(m)]||d[m]||l[m]||o;return r?n.createElement(f,a(a({ref:t},s),{},{components:r})):n.createElement(f,a({ref:t},s))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6534:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return a},default:function(){return l},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=r(3117),i=(r(7294),r(3905));const o={id:"bcd",title:"BCD",sidebar_position:6,description:"BCD"},a="BCD",c={unversionedId:"E-ComputerArchitecture/bcd",id:"E-ComputerArchitecture/bcd",title:"BCD",description:"BCD",source:"@site/docs/E-ComputerArchitecture/bcd.md",sourceDirName:"E-ComputerArchitecture",slug:"/E-ComputerArchitecture/bcd",permalink:"/SPO600/E-ComputerArchitecture/bcd",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/SPO600/tree/main/docs/E-ComputerArchitecture/bcd.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"bcd",title:"BCD",sidebar_position:6,description:"BCD"},sidebar:"courseNotesSidebar",previous:{title:"Atomic Operation",permalink:"/SPO600/E-ComputerArchitecture/atomic-operation"},next:{title:"Bitwise Operations",permalink:"/SPO600/E-ComputerArchitecture/bitwise-operations"}},u={},p=[],s={toc:p};function l(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bcd"},"BCD"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Binary coded decimal")," is a binary representation of decimal numbers where each ",(0,i.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/word#nibble"},"nibble")," (4 bits) in a ",(0,i.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/word"},"word")," represents a separate decimal digit."),(0,i.kt)("p",null,"For example, in BCD, the value 128 would be represented in a 16-bit value as:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Binary:    0 0 0 0     0 0 0 1      0 0 1 0     1 0 0 0\nDecimal:         0           1            2           8\n")),(0,i.kt)("p",null,"(Note that, in traditional binary integer representation, the same binary number represents the decimal value 296)."),(0,i.kt)("p",null,"In ",(0,i.kt)("a",{parentName:"p",href:"/SPO600/E-ComputerArchitecture/signed"},"signed")," BCD values, the highest-order nibble is usually used to hold the sign (0 for positive, non-0 for negative)."),(0,i.kt)("p",null,"BCD is extensively used on IBM midrange and mainframe systems. Extended Binary Coded Decimal Interchange Code (EBCDIC) is a character encoding based on BCD used as an alternative to ASCII."),(0,i.kt)("p",null,"BCD is also used in some accounting programs, to avoid errors that can be introduced through the use of floating-point math."),(0,i.kt)("p",null,"Some microcomputer CPUs, such as the ",(0,i.kt)("a",{parentName:"p",href:"/SPO600/G-6502/6502"},"6502"),", support a BCD math mode."))}l.isMDXComponent=!0}}]);